        Difference Array
------------------------------------>

Used to efficiently apply range updates
Multiple updates in the given range can be done in a constant time

arr = {0,0,0,0,0}
queries = {(1,3,2), (2,4,3), (0,2,-2)} -> (L,R,Value)

Brute Force TC -> O(q*n) at the worst case

     Difference Array Approach
------------------------------------>
Step 1 -> Declare a difference array of size n+1
            diff_arr[] = {0,0,0,0,0,0}

Step 2 -> For each query Range update ->
            diff_arr[L] += value
            diff_arr[R+1] -= value

Step 3 -> Cumulative sum of the diff_arr
            diff_arr[i] = diff_arr[i-1] + diff_arr[i]

Step 4 -> Update the main array accordingly

            Example
------------------------------------>
diff_arr = {0,0,0,0,0,0}
For (1,3,2) --> diff_arr = {0,2,0,0,-2,0} ---> dff[1] +=2, diff[4] -= 2
For (2,4,3) --> diff_arr = {0,2,3,0,-2,-3} --> dff[2] +=3, diff[5] -= 3
For (0,2,-2) -> diff_arr = {-2,2,3,2,-2,-3} -> dff[0] += -2, diff[3] -= -2

Cumulative sum array -> diff_arr = {-2,0,3,5,3,0}
Now, update the main array -> {-2,0,3,5,3,0} since all the values are 0

Leetcode - 2381. Shifting Letters II
1109. Corporate Flight Bookings
